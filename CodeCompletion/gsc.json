{
  "description": "Textastic Code Completion for CODScript",
	"uuid": "5172F0C4-E2A6-4EC4-ADFA-B946A09FC070",

	"completionSets": [
		{
			"name": "gsc.keywords.control",
			"defaultAppend": "",

			"strings": [
				"return",
				{ "string": "break", "append": ";" },
				{ "string": "case", "append": " ${1:condition}: " },
				{ "string": "continue", "append": ";" },
				{ "string": "default", "append": ":" },
				{ "string": "do", "append": " {\n\t$0\n} while ($1);" },
				{ "string": "else", "append": " {\n\t$0\n}" },
				{ "string": "for", "append": " (${1:i = 0}; i ${3:< count}; ${4:i++}) {\n\t$0\n}" },
				{ "string": "goto", "append": " ${1:label};" },
				{ "string": "if", "append": " ($1) {\n\t$0\n}" },
				{ "string": "switch", "append": " ($1) {\n\t$0\n}" },
				{ "string": "while", "append": " ($1) {\n\t$2\n}" }
			]
		},
		{
			"name": "gsc.keywords.control.else-if",
			"defaultAppend": "",

			"strings": [
				{ "string": "else if", "append": " ($1) {\n\t$0\n}" }
			]
		},
		{
			"name": "gsc.keywords.structures",
			"defaultAppend": "",
            
			"strings": [
				"struct",
				"union",
                "enum",
                { "string": "enumdef", "replace": "enum ${1:name} {\n\t${2:enumerator1} = ${3:value1}\n\t${4:enumerator2} = ${5:value2}\n};" },
                { "string": "structdef", "replace": "struct ${1:name} {\n\t${2:members}\n};" },
                { "string": "typedef", "append": " ${1:existing} ${2:new};" },
                { "string": "uniondef", "replace": "union ${1:name} {\n\t${2:members}\n};" }
			]
		},
		{
			"name": "gsc.keywords.operators",
			"defaultAppend": "",
            
			"strings": [
                { "string": "sizeof", "append": "(${1:type})$0" }
			]
		},
		{
			"name": "gsc.keywords.dataTypes",
			"defaultAppend": "",
            
			"strings": [
				"void",
				"char",
				"double",
				"float",
				"int",
				"long",
				"short",
				"signed",
                "unsigned"
			]
		},
		{
			"name": "gsc.keywords.storageClasses",
			"defaultAppend": "",
            
			"strings": [
				"auto",
                "extern",
                "register",
                "static"
			]
		},
		{
			"name": "gsc.keywords.typeQualifiers",
			"defaultAppend": "",
            
			"strings": [
				"const",
                "volatile"
			]
		},
		{
			"name": "gsc.constants",
			"defaultAppend": "",
            
			"strings": [
				"true",
				"false",
				"NULL"
			]
		},

		{
			"name": "gsc.functions",
			"defaultAppend": "($1)",
            
			"strings": [
                { "string": "free", "append": "(${1:pointer})" },
                { "string": "malloc", "append": "(${1:size})" },
                "abort",
    			"abs",
    			"acos",
    			"asctime",
    			"asin",
    			"assert",
    			"atan",
    			"atan2",
    			"atexit",
    			"atof",
    			"atoi",
    			"atol",
    			"bsearch",
    			"calloc",
    			"ceil",
    			"clearerr",
    			"clock",
    			"cos",
    			"cosh",
    			"ctime",
    			"difftime",
    			"div",
    			"ecvt",
    			"exit",
    			"exp",
    			"fabs",
    			"fclose",
    			"fcvt",
    			"feof",
    			"ferror",
    			"fflush",
    			"fgetc",
    			"fgetpos",
    			"fgets",
    			"floor",
    			"fmod",
    			"fopen",
    			"fprintf",
    			"fputc",
    			"fputchar",
    			"fputs",
    			"fread",
    			"free",
    			"freopen",
    			"frexp",
    			"fscanf",
    			"fseek",
    			"fsetpos",
    			"ftell",
    			"fwrite",
    			"gcvt",
    			"getc",
    			"getchar",
    			"getenv",
    			"gets",
    			"getw",
    			"gmtime",
    			"isalnum",
    			"isalpha",
    			"iscntrl",
    			"isdigit",
    			"isgraph",
    			"islower",
    			"isprint",
    			"ispunct",
    			"isspace",
    			"isupper",
    			"isxdigit",
    			"itoa",
    			"labs",
    			"ldexp",
    			"ldiv",
    			"lfind",
    			"localtime",
    			"log",
    			"log10",
    			"lsearch",
    			"ltoa",
    			"malloc",
    			"max",
    			"memchr",
    			"memcmp",
    			"memcpy",
    			"memmove",
    			"memset",
    			"min",
    			"mktime",
    			"modf",
    			"offsetof",
    			"perror",
    			"pow",
    			"printf",
    			"putc",
    			"putchar",
    			"putenv",
    			"puts",
    			"putw",
    			"qsort",
    			"raise",
    			"rand",
    			"realloc",
    			"remove",
    			"rename",
    			"rewind",
    			"scanf",
    			"setbuf",
    			"setvbuf",
    			"signal",
    			"sin",
    			"sinh",
    			"sprintf",
    			"sqrt",
    			"srand",
    			"sscanf",
    			"strcat",
    			"strchr",
    			"strcmp",
    			"strcoll",
    			"strcpy",
    			"strcspn",
    			"strerror",
    			"strftime",
    			"strlen",
    			"strncat",
    			"strncmp",
    			"strncpy",
    			"strpbrk",
    			"strrchr",
    			"strspn",
    			"strstr",
    			"strtod",
    			"strtok",
    			"strtol",
    			"strtoul",
    			"strxfrm",
    			"swab",
    			"system",
    			"tan",
    			"tanh",
    			"time",
    			"tmpfile",
    			"tmpnam",
    			"tolower",
    			"toupper",
    			"ultoa",
    			"ungetc",
    			"va_arg",
    			"va_end",
    			"va_start",
    			"vfprintf",
    			"vprintf",
    			"vsprintf"
			]
		},
		{
			"name": "gsc.preprocessor.directives",
			"strings": [
    			{ "string": "include <", "append": "${1:filename}>" },
    			{ "string": "include \"", "append": "${1:filename}\"" },

    			"if",
    			"ifdef",
    			"ifndef",
    			"elif",
    			"else",

    			"define",
    			"undef",

    			"pragma",

    			"error",
    			"warning"
			]
		}
	],

	"contexts": [
		{
			"description": "Control keywords",
			"scope": "(source.gsc) - comment - string",
			"pattern": "(?<!\\.|\\[|\\(|,|@)\\b([a-zA-Z]*)",
			"completionCaptureIndex": 1,
			"completionSetNames": [
				"gsc.keywords.control"
			]
		},
		{
			"description": "else if keyword",
			"scope": "(source.gsc) - comment - string",
			"pattern": "(?<!\\.|\\[|\\(|,|@)\\b(e[lse if]*)",
			"completionCaptureIndex": 1,
			"completionSetNames": [
				"gsc.keywords.control.else-if"
			]
		},
		{
			"description": "Preprocessor directives",
			"scope": "(source.gsc) - comment - string",
			"pattern": "\\s*#([a-zA-Z]*)",
			"completionCaptureIndex": 1,
			"completionSetNames": [
				"gsc.preprocessor.directives"
			]
		},
		{
			"description": "Non-control keywords",
			"scope": "(source.gsc) - comment - string",
			"pattern": "(?<!\\.|@)\\b([a-zA-Z]*)",
			"completionCaptureIndex": 1,
			"completionSetNames": [
				"gsc.keywords.structures",
				"gsc.keywords.operators",
				"gsc.keywords.dataTypes",				
				"gsc.keywords.storageClasses",
				"gsc.keywords.typeQualifiers",
				"gsc.functions",
				"gsc.constants"
			]
		}
	]
}
